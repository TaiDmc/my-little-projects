body{
    color:rgb(185, 181, 181) ;
    background-color: black;
    font-family: Arial, Helvetica, sans-serif;
}


.contenedor{
  width: 90%;
  max-width: 1000px;
  margin: 10px auto;
  display: grid;  
  grid-gap: 20px;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, auto);

  grid-template-areas: "header header header"
                        "contenido contenido sidebar"
                        "widget-1 widget-2 sidebar"
                         "footer footer footer";
}


.contenedor > div,
.contenedor  .header, 
.contenedor  .contenido, 
.contenedor  .sidebar, 
.contenedor  .footer{
background-color: #FFF;
padding: 20px;
border-radius: 5px;
}

/*La manera en la que hicimos este responsive es correcta, pero no la mas adecuada por que se hace por cada elemento y seria fatigante
esta ultima manera se hara con areas y no con las clases (o algo asi xd)*/

.contenedor .header{
    background-color: rgb(24, 24, 54);
    color: #FFF;
  /*  grid-column-start: 1;
    grid-column-end: 4; */
    grid-area: header;
  padding: 20px;
  
    display: flex;
    align-items: center;
    justify-content: center;

}

.contenedor .contenido {
    background-color: blueviolet;
    color: black;
   /* grid-column: span 2; */
   grid-area: contenido;
} 

.contenedor .sidebar {
    grid-column: 3 / 4;
background-color: aqua;
color: black;
text-align: center;
display: flex;
align-items: center;
justify-content: center;
min-height: 100px;
/* grid-row: span 2; */
grid-area: sidebar;
}

.contenedor .widget-1{
    background-color: peachpuff;
color: #222;
text-align: center;
height: 100px;

display: flex;
align-items: center;
justify-content: center;

grid-area: widget-1;
}

.contenedor .widget-2{
    background-color: peachpuff;
color: #222;
text-align: center;
height: 100px;

display: flex;
align-items: center;
justify-content: center;


grid-area: widget-2;
}




/* 
.contenedor .widget-1,
.contenedor .widget-2{
background-color: peachpuff;
color: #222;
text-align: center;
height: 100px;

display: flex;
align-items: center;
justify-content: center;
} */

.contenedor .footer {
background-color:rgb(24, 24, 54);
color: #FFF;
/* grid-column: span 3; */
text-align: center;

display: flex;
align-items: center;
justify-content: center;
grid-area: footer;
}

@media screen and (max-width: 768px){
.contenedor{
  grid-template-areas: "header header header"
  "contenido contenido contenido"
  "sidebar sidebar sidebar"
  "widget-1 widget-1 widget-2"
  "footer footer footer";
}
}


/*La mejor manera seria hacerlo con areas, y para hacerlo responsivo con un meta con una condicion de cuando baje la resolucion de la pantalla reasignar las areas pero de manera responsiva y de tu gusto
buen ejemplo bye,
y con solo una propiedad (css grid)*/


